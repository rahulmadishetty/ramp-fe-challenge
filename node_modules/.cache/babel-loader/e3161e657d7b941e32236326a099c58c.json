{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function usePaginatedTransactions() {\n  _s();\n\n  const {\n    fetchWithCache,\n    loading\n  } = useCustomFetch();\n  const [paginatedTransactions, setPaginatedTransactions] = useState(null);\n  const fetchAll = useCallback(async () => {\n    var _paginatedTransaction;\n\n    const page = (_paginatedTransaction = paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.nextPage) !== null && _paginatedTransaction !== void 0 ? _paginatedTransaction : 0;\n\n    if ((paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.nextPage) === null) {\n      return; // No more pages to fetch, prevent crash\n    }\n\n    const response = await fetchWithCache(\"paginatedTransactions\", {\n      page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage\n    });\n    setPaginatedTransactions(previousResponse => {\n      if (response === null || previousResponse === null) {\n        return response;\n      } //Fixed Bug 4: We accumulate data across all pages\n\n\n      return {\n        data: [...previousResponse.data, ...response.data],\n        nextPage: response.nextPage\n      };\n    });\n  }, [fetchWithCache, paginatedTransactions]);\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null);\n  }, []);\n  return {\n    data: paginatedTransactions,\n    loading,\n    fetchAll,\n    invalidateData\n  };\n}\n\n_s(usePaginatedTransactions, \"5C7xQHueO9nKLl+7c12EAAA+DoA=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useCustomFetch","usePaginatedTransactions","fetchWithCache","loading","paginatedTransactions","setPaginatedTransactions","fetchAll","page","nextPage","response","previousResponse","data","invalidateData"],"sources":["/Users/rahulmadishetty/Downloads/ramp-fe-challenge/src/hooks/usePaginatedTransactions.ts"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { PaginatedRequestParams, PaginatedResponse, Transaction } from \"../utils/types\"\nimport { PaginatedTransactionsResult } from \"./types\"\nimport { useCustomFetch } from \"./useCustomFetch\"\n\nexport function usePaginatedTransactions(): PaginatedTransactionsResult {\n  const { fetchWithCache, loading } = useCustomFetch()\n  const [paginatedTransactions, setPaginatedTransactions] = useState<PaginatedResponse<\n    Transaction[]\n  > | null>(null)\n\n  const fetchAll = useCallback(async () => {\n    const page = paginatedTransactions?.nextPage ?? 0\n    if (paginatedTransactions?.nextPage === null) {\n      return // No more pages to fetch, prevent crash\n    }\n    \n    const response = await fetchWithCache<PaginatedResponse<Transaction[]>, PaginatedRequestParams>(\n      \"paginatedTransactions\",\n      {\n        page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage,\n      }\n    )\n\n    setPaginatedTransactions((previousResponse) => {\n      if (response === null || previousResponse === null) {\n        return response\n      }\n      //Fixed Bug 4: We accumulate data across all pages\n      return { data: [...previousResponse.data, ...response.data], nextPage: response.nextPage }\n    })\n  }, [fetchWithCache, paginatedTransactions])\n\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null)\n  }, [])\n\n  return { data: paginatedTransactions, loading, fetchAll, invalidateData }\n}\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAGA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,SAASC,wBAAT,GAAiE;EAAA;;EACtE,MAAM;IAAEC,cAAF;IAAkBC;EAAlB,IAA8BH,cAAc,EAAlD;EACA,MAAM,CAACI,qBAAD,EAAwBC,wBAAxB,IAAoDN,QAAQ,CAExD,IAFwD,CAAlE;EAIA,MAAMO,QAAQ,GAAGR,WAAW,CAAC,YAAY;IAAA;;IACvC,MAAMS,IAAI,4BAAGH,qBAAH,aAAGA,qBAAH,uBAAGA,qBAAqB,CAAEI,QAA1B,yEAAsC,CAAhD;;IACA,IAAI,CAAAJ,qBAAqB,SAArB,IAAAA,qBAAqB,WAArB,YAAAA,qBAAqB,CAAEI,QAAvB,MAAoC,IAAxC,EAA8C;MAC5C,OAD4C,CACrC;IACR;;IAED,MAAMC,QAAQ,GAAG,MAAMP,cAAc,CACnC,uBADmC,EAEnC;MACEK,IAAI,EAAEH,qBAAqB,KAAK,IAA1B,GAAiC,CAAjC,GAAqCA,qBAAqB,CAACI;IADnE,CAFmC,CAArC;IAOAH,wBAAwB,CAAEK,gBAAD,IAAsB;MAC7C,IAAID,QAAQ,KAAK,IAAb,IAAqBC,gBAAgB,KAAK,IAA9C,EAAoD;QAClD,OAAOD,QAAP;MACD,CAH4C,CAI7C;;;MACA,OAAO;QAAEE,IAAI,EAAE,CAAC,GAAGD,gBAAgB,CAACC,IAArB,EAA2B,GAAGF,QAAQ,CAACE,IAAvC,CAAR;QAAsDH,QAAQ,EAAEC,QAAQ,CAACD;MAAzE,CAAP;IACD,CANuB,CAAxB;EAOD,CApB2B,EAoBzB,CAACN,cAAD,EAAiBE,qBAAjB,CApByB,CAA5B;EAsBA,MAAMQ,cAAc,GAAGd,WAAW,CAAC,MAAM;IACvCO,wBAAwB,CAAC,IAAD,CAAxB;EACD,CAFiC,EAE/B,EAF+B,CAAlC;EAIA,OAAO;IAAEM,IAAI,EAAEP,qBAAR;IAA+BD,OAA/B;IAAwCG,QAAxC;IAAkDM;EAAlD,CAAP;AACD;;GAjCeX,wB;UACsBD,c"},"metadata":{},"sourceType":"module"}